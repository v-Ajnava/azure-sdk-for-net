// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Represents a filter which is a composition of an expression and an
    /// action that is executed in the pub/sub pipeline.
    /// </summary>
    public partial class SqlFilter : Filter
    {
        /// <summary>
        /// Initializes a new instance of the SqlFilter class.
        /// </summary>
        public SqlFilter() { }

        /// <summary>
        /// Initializes a new instance of the SqlFilter class.
        /// </summary>
        public SqlFilter(bool? requiresPreprocessing = default(bool?), string sqlExpression = default(string), int? compatibilityLevel = default(int?), IDictionary<string, object> parameters = default(IDictionary<string, object>))
            : base(requiresPreprocessing)
        {
            SqlExpression = sqlExpression;
            CompatibilityLevel = compatibilityLevel;
            Parameters = parameters;
        }

        /// <summary>
        /// The SQL expression. e.g. MyProperty='ABC'
        /// </summary>
        [JsonProperty(PropertyName = "sqlExpression")]
        public string SqlExpression { get; set; }

        /// <summary>
        /// This property is reserved for future use. An integer value showing
        /// the compatibility level, currently hard-coded to 20.
        /// </summary>
        [JsonProperty(PropertyName = "compatibilityLevel")]
        public int? CompatibilityLevel { get; set; }

        /// <summary>
        /// The value of a filter expression.
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IDictionary<string, object> Parameters { get; set; }

    }
}
