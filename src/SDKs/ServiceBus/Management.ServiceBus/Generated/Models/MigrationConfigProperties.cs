// <auto-generated>
// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Single item in List or Get Migration Config operation
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class MigrationConfigProperties : Resource
    {
        /// <summary>
        /// Initializes a new instance of the MigrationConfigProperties class.
        /// </summary>
        public MigrationConfigProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrationConfigProperties class.
        /// </summary>
        /// <param name="targetNamespace">Existing premium Namespace ARM Id
        /// name which has no entities, will be used for migration</param>
        /// <param name="postMigrationName">Name to access Standard Namespace
        /// after migration</param>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="provisioningState">Provisioning state of Migration
        /// Configuration </param>
        public MigrationConfigProperties(string targetNamespace, string postMigrationName, string id = default(string), string name = default(string), string type = default(string), string provisioningState = default(string))
            : base(id, name, type)
        {
            ProvisioningState = provisioningState;
            TargetNamespace = targetNamespace;
            PostMigrationName = postMigrationName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets provisioning state of Migration Configuration
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets existing premium Namespace ARM Id name which has no
        /// entities, will be used for migration
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetNamespace")]
        public string TargetNamespace { get; set; }

        /// <summary>
        /// Gets or sets name to access Standard Namespace after migration
        /// </summary>
        [JsonProperty(PropertyName = "properties.postMigrationName")]
        public string PostMigrationName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetNamespace == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetNamespace");
            }
            if (PostMigrationName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PostMigrationName");
            }
        }
    }
}
