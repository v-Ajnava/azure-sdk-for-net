// <auto-generated>
// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The response from the List namespace operation.
    /// </summary>
    public partial class NWRuleSetVirtualNetworkRules
    {
        /// <summary>
        /// Initializes a new instance of the NWRuleSetVirtualNetworkRules
        /// class.
        /// </summary>
        public NWRuleSetVirtualNetworkRules()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NWRuleSetVirtualNetworkRules
        /// class.
        /// </summary>
        /// <param name="subnet">Subnet properties</param>
        /// <param name="ignoreMissingVnetServiceEndpoint">Value that indicates
        /// whether to ignore missing Vnet Service Endpoint</param>
        public NWRuleSetVirtualNetworkRules(Subnet subnet = default(Subnet), bool? ignoreMissingVnetServiceEndpoint = default(bool?))
        {
            Subnet = subnet;
            IgnoreMissingVnetServiceEndpoint = ignoreMissingVnetServiceEndpoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets subnet properties
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        public Subnet Subnet { get; set; }

        /// <summary>
        /// Gets or sets value that indicates whether to ignore missing Vnet
        /// Service Endpoint
        /// </summary>
        [JsonProperty(PropertyName = "ignoreMissingVnetServiceEndpoint")]
        public bool? IgnoreMissingVnetServiceEndpoint { get; set; }

    }
}
