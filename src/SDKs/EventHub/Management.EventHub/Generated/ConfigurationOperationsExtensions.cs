// <auto-generated>
// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EventHub
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ConfigurationOperations.
    /// </summary>
    public static partial class ConfigurationOperationsExtensions
    {
            /// <summary>
            /// Replace all specified Event Hubs Cluster settings with those contained in
            /// the request body. Leaves the settings not specified in the request body
            /// unmodified.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Event Hubs Cluster.
            /// </param>
            /// <param name='parameters'>
            /// Parameters for creating an Event Hubs Cluster resource.
            /// </param>
            public static ClusterQuotaConfigurationProperties Patch(this IConfigurationOperations operations, string resourceGroupName, string clusterName, ClusterQuotaConfigurationProperties parameters)
            {
                return operations.PatchAsync(resourceGroupName, clusterName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Replace all specified Event Hubs Cluster settings with those contained in
            /// the request body. Leaves the settings not specified in the request body
            /// unmodified.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Event Hubs Cluster.
            /// </param>
            /// <param name='parameters'>
            /// Parameters for creating an Event Hubs Cluster resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ClusterQuotaConfigurationProperties> PatchAsync(this IConfigurationOperations operations, string resourceGroupName, string clusterName, ClusterQuotaConfigurationProperties parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PatchWithHttpMessagesAsync(resourceGroupName, clusterName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get all Event Hubs Cluster settings - a collection of key/value pairs which
            /// represent the quotas and settings imposed on the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Event Hubs Cluster.
            /// </param>
            public static ClusterQuotaConfigurationProperties Get(this IConfigurationOperations operations, string resourceGroupName, string clusterName)
            {
                return operations.GetAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all Event Hubs Cluster settings - a collection of key/value pairs which
            /// represent the quotas and settings imposed on the cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group within the Azure subscription.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Event Hubs Cluster.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ClusterQuotaConfigurationProperties> GetAsync(this IConfigurationOperations operations, string resourceGroupName, string clusterName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, clusterName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
